#!/bin/bash

# Made with info from https://www.psdevwiki.com/ps4/Param.sfo

paramsfo_file=$1

# $1: offset $2: length; both in hex
getbytes() {
  xxd -p -s $(($1)) -l $(($2)) "$paramsfo_file"
}

# Offsets and integers need to be reversed
reverse() {
  local output i
  for i in $(seq 1 $((${#1}/2))); do
    output=${1:$(((i-1)*2)):2}"$output"
  done
  echo "$output"
}

# Header SFO
if [[ $(getbytes 0x00 0x04) != 00505346 ]]; then
  echo "Not a param.sfo file! ("PSF" Magic not found)" >&2
  exit 1
fi
version=$(getbytes 0x04 0x04)
key_table_start_offset=0x$(reverse $(getbytes 0x08 0x04))
data_table_start_offset=0x$(reverse $(getbytes 0x0C 0x04))
number_of_entries_in_index_table=$(reverse $(getbytes 0x10 0x04))

# Returns any Bash math operation as hex number
hexmath() {
  printf "0x%X" $(("$1"))
}

# Index table
i=0
while true; do
  key_table_offset=$(getbytes $(hexmath "0x14+0x10*$i") 0x02)
  key_table_offset=0x${key_table_offset:2:2}${key_table_offset:0:2}
  param_fmt=$(getbytes $(hexmath "0x16+0x10*$i") 0x02)
  parameter_length=$(getbytes $(hexmath "0x18+0x10*$i") 0x04)
  parameter_length=0x${parameter_length:2:2}${parameter_length:0:2}
  parameter_max_length=$(getbytes $(hexmath "0x1C+0x10*$i") 0x04)
  parameter_max_length=0x${parameter_max_length:2:2}${parameter_max_length:0:2}
  data_table_offset=$(getbytes $(hexmath "0x20+0x10*$i") 0x04)
  data_table_offset=0x${data_table_offset:2:2}${data_table_offset:0:2}

  key=$(getbytes $(hexmath "$key_table_start_offset+$key_table_offset") 0x100 | xxd -r -p | { read -r -d $'\0' line; echo "$line"; })
  if [[ $key != "" ]]; then
    echo -n "$key="
  else
    break
  fi

  data=$(getbytes $(hexmath "$data_table_start_offset+$data_table_offset") $parameter_length)
  case "$param_fmt" in
    0400) true ;;
    0402) echo "$data" | xxd -r -p; echo ;;
    0404) reverse "$data" ;;
    *) break
  esac
  ((i++))
done

if [[ $i -ne $number_of_entries_in_index_table ]]; then
  echo "Warning: ${number_of_entries_in_index_table##*0} keys expected, but $i found." >&2
fi
