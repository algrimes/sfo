#!/bin/bash

# Made with info from https://www.psdevwiki.com/ps4/Param.sfo

paramsfo_file=$1

# $1: offset in bytes, $2: length in bytes
getbytes() {
  xxd -p -s $(($1)) -l $(($2)) "$paramsfo_file"
}

# Header
if [[ $(getbytes 0x00 0x04) != 00505346 ]]; then
  echo "Not a param.sfo file! (\"PSF\" Magic not found)" >&2
  exit 1
fi
#version=$(getbytes 0x04 0x04)
keyTableOffset=$(getbytes 0x08 0x04)
# Integers and offsets need to be reversed
keyTableOffset=0x${keyTableOffset:6:2}${keyTableOffset:4:2}${keyTableOffset:2:2}${keyTableOffset:0:2}
dataTableOffset=$(getbytes 0x0C 0x04)
dataTableOffset=0x${dataTableOffset:6:2}${dataTableOffset:4:2}${dataTableOffset:2:2}${dataTableOffset:0:2}
indexTableEntries=$(getbytes 0x10 0x04)
indexTableEntries=${indexTableEntries:6:2}${indexTableEntries:4:2}${indexTableEntries:2:2}${indexTableEntries:0:2}

i=0
while true; do
  keyOffset=$(getbytes $((0x14+0x10*i)) 0x02)
  keyOffset=0x${keyOffset:2:2}${keyOffset:0:2}
  param_fmt=$(getbytes $((0x16+0x10*i)) 0x02)
  paramLen=$(getbytes $((0x18+0x10*i)) 0x04)
  paramLen=0x${paramLen:6:2}${paramLen:4:2}${paramLen:2:2}${paramLen:0:2}
#  paramMaxLen=$(getbytes $((0x1C+0x10*i)) 0x04)
#  paramMaxLen=0x${paramMaxLen:6:2}${paramMaxLen:4:2}${paramMaxLen:2:2}${paramMaxLen:0:2}
  dataOffset=$(getbytes $((0x20+0x10*i)) 0x04)
  dataOffset=0x${dataOffset:6:2}${dataOffset:4:2}${dataOffset:2:2}${dataOffset:0:2}

  key=$(getbytes $((keyTableOffset+keyOffset)) 0x100 | xxd -r -p | { read -r -d $'\0' line; echo "$line"; })
  if [[ $key != "" ]]; then
    echo -n "$key="
  else
    break
  fi

  data=$(getbytes $((dataTableOffset+dataOffset)) "$paramLen")
  case "$param_fmt" in
    0400) # UTF-8 special mode string
      ;;
    0402) # UTF-8 string
      echo "${data%00}" | xxd -r -p
      echo
      ;;
    0404) # Integer
      data=0x${data:6:2}${data:4:2}${data:2:2}${data:0:2}
      echo "$data"
      ;;
    *) break
  esac

  ((i++))
done

if [[ $i -ne $indexTableEntries ]]; then
  echo "Warning: ${indexTableEntries##*0} keys expected, but $i found." >&2
fi
